Но, почему-то:
1. Обе функции не изменяют счётчик элементов (а мы об этом говорили)
2. Функция delete_node() не вызывает destroy() (..?)
3. А самое главное - они не вызываются в "нужных" местах! Например, в функции slist_prepend() всё делается в "рукопашную".
4. Бросилась в глаза функция slist_insert()
    Зачем-то два раза вызывает функцию create_node() в разных ветках if() - зачем?
    И, кроме того.
    В задании сказано:
    "Когда список пустой, для успешной вставки элемента в качестве item_id должен указываться идентификатор,
    возвращаемый функцией slist_stop. В остальных случаях, item_id должен однозначно соответствовать элементу списка. "
    Вы "пустоту" списка не проверяете...
 И вообще, функцию нужно переписать!

5. А в функции slist_item() не плохо бы проверить индекс на больше или равно slist_count()

ОТВЕТ:
1. Счетчик изменяю после успешного использования функции create_node или delete_node.
2. Исправил. Почему-то не заметил этого сразу.
3. Исправил.
4. Исправил.
5. Исправил.

// Решил возвращать в качестве slist_stop() значение (size_t)slist, если список пустой. Тогда в этом будет какой-то смысл.